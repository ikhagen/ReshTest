//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReshTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentCreate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class DepartmentCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code OrganizationalDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code OrganizationalDesignation {
            get {
                return this.OrganizationalDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationalDesignationField, value) != true)) {
                    this.OrganizationalDesignationField = value;
                    this.RaisePropertyChanged("OrganizationalDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentReshId {
            get {
                return this.ParentReshIdField;
            }
            set {
                if ((this.ParentReshIdField.Equals(value) != true)) {
                    this.ParentReshIdField = value;
                    this.RaisePropertyChanged("ParentReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Code", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimpleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OID {
            get {
                return this.OIDField;
            }
            set {
                if ((this.OIDField.Equals(value) != true)) {
                    this.OIDField = value;
                    this.RaisePropertyChanged("OID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SimpleType {
            get {
                return this.SimpleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SimpleTypeField, value) != true)) {
                    this.SimpleTypeField = value;
                    this.RaisePropertyChanged("SimpleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Period", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class Period : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicAddress", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class ElectronicAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InheritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inherited {
            get {
                return this.InheritedField;
            }
            set {
                if ((this.InheritedField.Equals(value) != true)) {
                    this.InheritedField = value;
                    this.RaisePropertyChanged("Inherited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCodeValue {
            get {
                return this.TypeCodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeValueField, value) != true)) {
                    this.TypeCodeValueField = value;
                    this.RaisePropertyChanged("TypeCodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalAddress", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class PhysicalAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InheritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostboxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inherited {
            get {
                return this.InheritedField;
            }
            set {
                if ((this.InheritedField.Equals(value) != true)) {
                    this.InheritedField = value;
                    this.RaisePropertyChanged("Inherited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((this.PostalCodeField.Equals(value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postbox {
            get {
                return this.PostboxField;
            }
            set {
                if ((object.ReferenceEquals(this.PostboxField, value) != true)) {
                    this.PostboxField = value;
                    this.RaisePropertyChanged("Postbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCodeValue {
            get {
                return this.TypeCodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeValueField, value) != true)) {
                    this.TypeCodeValueField = value;
                    this.RaisePropertyChanged("TypeCodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReshUnit", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReshTest.ServiceReference1.Organization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReshTest.ServiceReference1.Department))]
    public partial class ReshUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshUnit[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code OrganizationalDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Service[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopOrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopOrganizationReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentFacilityOrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshUnit[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNames {
            get {
                return this.InternationalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternationalNamesField, value) != true)) {
                    this.InternationalNamesField = value;
                    this.RaisePropertyChanged("InternationalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationReshId {
            get {
                return this.OrganizationReshIdField;
            }
            set {
                if ((this.OrganizationReshIdField.Equals(value) != true)) {
                    this.OrganizationReshIdField = value;
                    this.RaisePropertyChanged("OrganizationReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code OrganizationalDesignation {
            get {
                return this.OrganizationalDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationalDesignationField, value) != true)) {
                    this.OrganizationalDesignationField = value;
                    this.RaisePropertyChanged("OrganizationalDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentReshId {
            get {
                return this.ParentReshIdField;
            }
            set {
                if ((this.ParentReshIdField.Equals(value) != true)) {
                    this.ParentReshIdField = value;
                    this.RaisePropertyChanged("ParentReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReshId {
            get {
                return this.ReshIdField;
            }
            set {
                if ((this.ReshIdField.Equals(value) != true)) {
                    this.ReshIdField = value;
                    this.RaisePropertyChanged("ReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopOrganizationNumber {
            get {
                return this.TopOrganizationNumberField;
            }
            set {
                if ((this.TopOrganizationNumberField.Equals(value) != true)) {
                    this.TopOrganizationNumberField = value;
                    this.RaisePropertyChanged("TopOrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopOrganizationReshId {
            get {
                return this.TopOrganizationReshIdField;
            }
            set {
                if ((this.TopOrganizationReshIdField.Equals(value) != true)) {
                    this.TopOrganizationReshIdField = value;
                    this.RaisePropertyChanged("TopOrganizationReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentFacilityOrganizationNumber {
            get {
                return this.TreatmentFacilityOrganizationNumberField;
            }
            set {
                if ((this.TreatmentFacilityOrganizationNumberField.Equals(value) != true)) {
                    this.TreatmentFacilityOrganizationNumberField = value;
                    this.RaisePropertyChanged("TreatmentFacilityOrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class Organization : ReshTest.ServiceReference1.ReshUnit {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] IndustryCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code MunicipalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code SectorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] IndustryCodes {
            get {
                return this.IndustryCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryCodesField, value) != true)) {
                    this.IndustryCodesField = value;
                    this.RaisePropertyChanged("IndustryCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Municipality {
            get {
                return this.MunicipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityField, value) != true)) {
                    this.MunicipalityField = value;
                    this.RaisePropertyChanged("Municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code SectorCode {
            get {
                return this.SectorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorCodeField, value) != true)) {
                    this.SectorCodeField = value;
                    this.RaisePropertyChanged("SectorCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class Department : ReshTest.ServiceReference1.ReshUnit {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class Service : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReshEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerReshId {
            get {
                return this.OwnerReshIdField;
            }
            set {
                if ((this.OwnerReshIdField.Equals(value) != true)) {
                    this.OwnerReshIdField = value;
                    this.RaisePropertyChanged("OwnerReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReshEditable {
            get {
                return this.ReshEditableField;
            }
            set {
                if ((this.ReshEditableField.Equals(value) != true)) {
                    this.ReshEditableField = value;
                    this.RaisePropertyChanged("ReshEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericFault", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class GenericFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class ValidationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ValidationError[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ValidationError[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationError", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class ValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentUpdate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class DepartmentUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code OrganizationalDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNames {
            get {
                return this.InternationalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternationalNamesField, value) != true)) {
                    this.InternationalNamesField = value;
                    this.RaisePropertyChanged("InternationalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code OrganizationalDesignation {
            get {
                return this.OrganizationalDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationalDesignationField, value) != true)) {
                    this.OrganizationalDesignationField = value;
                    this.RaisePropertyChanged("OrganizationalDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReshId {
            get {
                return this.ReshIdField;
            }
            set {
                if ((this.ReshIdField.Equals(value) != true)) {
                    this.ReshIdField = value;
                    this.RaisePropertyChanged("ReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationCreate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class OrganizationCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code OrganizationalDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code OrganizationalDesignation {
            get {
                return this.OrganizationalDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationalDesignationField, value) != true)) {
                    this.OrganizationalDesignationField = value;
                    this.RaisePropertyChanged("OrganizationalDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentReshId {
            get {
                return this.ParentReshIdField;
            }
            set {
                if ((this.ParentReshIdField.Equals(value) != true)) {
                    this.ParentReshIdField = value;
                    this.RaisePropertyChanged("ParentReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationUpdate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class OrganizationUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code MunicipalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code OrganizationalDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<ReshTest.ServiceReference1.Code, string> InternationalNames {
            get {
                return this.InternationalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternationalNamesField, value) != true)) {
                    this.InternationalNamesField = value;
                    this.RaisePropertyChanged("InternationalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Municipality {
            get {
                return this.MunicipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityField, value) != true)) {
                    this.MunicipalityField = value;
                    this.RaisePropertyChanged("Municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code OrganizationalDesignation {
            get {
                return this.OrganizationalDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationalDesignationField, value) != true)) {
                    this.OrganizationalDesignationField = value;
                    this.RaisePropertyChanged("OrganizationalDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReshId {
            get {
                return this.ReshIdField;
            }
            set {
                if ((this.ReshIdField.Equals(value) != true)) {
                    this.ReshIdField = value;
                    this.RaisePropertyChanged("ReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReshSearchParameters", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ReshSearchParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] SearchConstraintsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultSize {
            get {
                return this.ResultSizeField;
            }
            set {
                if ((this.ResultSizeField.Equals(value) != true)) {
                    this.ResultSizeField = value;
                    this.RaisePropertyChanged("ResultSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] SearchConstraints {
            get {
                return this.SearchConstraintsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchConstraintsField, value) != true)) {
                    this.SearchConstraintsField = value;
                    this.RaisePropertyChanged("SearchConstraints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResult", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    public partial class SearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.SearchFacet[] FacetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshUnit[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.SearchFacet[] Facets {
            get {
                return this.FacetsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacetsField, value) != true)) {
                    this.FacetsField = value;
                    this.RaisePropertyChanged("Facets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshUnit[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalResults {
            get {
                return this.TotalResultsField;
            }
            set {
                if ((this.TotalResultsField.Equals(value) != true)) {
                    this.TotalResultsField = value;
                    this.RaisePropertyChanged("TotalResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFacet", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    public partial class SearchFacet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.SearchResultFacetEntry[] EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.SearchResultFacetEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultFacetEntry", Namespace="http://register.nhn.no/CommunicationParty")]
    [System.SerializableAttribute()]
    public partial class SearchResultFacetEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hits {
            get {
                return this.HitsField;
            }
            set {
                if ((this.HitsField.Equals(value) != true)) {
                    this.HitsField = value;
                    this.RaisePropertyChanged("Hits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessWithConnectedReshUnits", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class BusinessWithConnectedReshUnits : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Business BusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshUnit[] ConnectedReshUnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Business Business {
            get {
                return this.BusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessField, value) != true)) {
                    this.BusinessField = value;
                    this.RaisePropertyChanged("Business");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshUnit[] ConnectedReshUnits {
            get {
                return this.ConnectedReshUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectedReshUnitsField, value) != true)) {
                    this.ConnectedReshUnitsField = value;
                    this.RaisePropertyChanged("ConnectedReshUnits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Business", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class Business : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Business[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ReshTest.ServiceReference1.LatitudeLongitude> GeographicalCoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] IndustryCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsGovernmentCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code MunicipalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.OpeningHours OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentOrganizationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsiblePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code SectorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Service1[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Business[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ElectronicAddress[] ElectronicAddresses {
            get {
                return this.ElectronicAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectronicAddressesField, value) != true)) {
                    this.ElectronicAddressesField = value;
                    this.RaisePropertyChanged("ElectronicAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ReshTest.ServiceReference1.LatitudeLongitude> GeographicalCoordinates {
            get {
                return this.GeographicalCoordinatesField;
            }
            set {
                if ((this.GeographicalCoordinatesField.Equals(value) != true)) {
                    this.GeographicalCoordinatesField = value;
                    this.RaisePropertyChanged("GeographicalCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] IndustryCodes {
            get {
                return this.IndustryCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryCodesField, value) != true)) {
                    this.IndustryCodesField = value;
                    this.RaisePropertyChanged("IndustryCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsGovernmentCompany {
            get {
                return this.IsGovernmentCompanyField;
            }
            set {
                if ((this.IsGovernmentCompanyField.Equals(value) != true)) {
                    this.IsGovernmentCompanyField = value;
                    this.RaisePropertyChanged("IsGovernmentCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Municipality {
            get {
                return this.MunicipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityField, value) != true)) {
                    this.MunicipalityField = value;
                    this.RaisePropertyChanged("Municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.OpeningHours OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationNumber {
            get {
                return this.OrganizationNumberField;
            }
            set {
                if ((this.OrganizationNumberField.Equals(value) != true)) {
                    this.OrganizationNumberField = value;
                    this.RaisePropertyChanged("OrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOrganizationName {
            get {
                return this.ParentOrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOrganizationNameField, value) != true)) {
                    this.ParentOrganizationNameField = value;
                    this.RaisePropertyChanged("ParentOrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentOrganizationNumber {
            get {
                return this.ParentOrganizationNumberField;
            }
            set {
                if ((this.ParentOrganizationNumberField.Equals(value) != true)) {
                    this.ParentOrganizationNumberField = value;
                    this.RaisePropertyChanged("ParentOrganizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.PhysicalAddress[] PhysicalAddresses {
            get {
                return this.PhysicalAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalAddressesField, value) != true)) {
                    this.PhysicalAddressesField = value;
                    this.RaisePropertyChanged("PhysicalAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsiblePerson {
            get {
                return this.ResponsiblePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsiblePersonField, value) != true)) {
                    this.ResponsiblePersonField = value;
                    this.RaisePropertyChanged("ResponsiblePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code SectorCode {
            get {
                return this.SectorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorCodeField, value) != true)) {
                    this.SectorCodeField = value;
                    this.RaisePropertyChanged("SectorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Service1[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatitudeLongitude", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial struct LatitudeLongitude : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpeningHours", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class OpeningHours : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.TimePeriod[] OpenAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreeText {
            get {
                return this.FreeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.FreeTextField, value) != true)) {
                    this.FreeTextField = value;
                    this.RaisePropertyChanged("FreeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.TimePeriod[] OpenAt {
            get {
                return this.OpenAtField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenAtField, value) != true)) {
                    this.OpenAtField = value;
                    this.RaisePropertyChanged("OpenAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class Service1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] AppliesToMunicipalitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Contract[] ContractsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.OpeningHours OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerHtkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ServiceTypedValue[] ServiceTypedValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ServiceVariant[] ServiceVariantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Treatment TreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] AppliesToMunicipalities {
            get {
                return this.AppliesToMunicipalitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AppliesToMunicipalitiesField, value) != true)) {
                    this.AppliesToMunicipalitiesField = value;
                    this.RaisePropertyChanged("AppliesToMunicipalities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Contract[] Contracts {
            get {
                return this.ContractsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractsField, value) != true)) {
                    this.ContractsField = value;
                    this.RaisePropertyChanged("Contracts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.OpeningHours OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerDisplayName {
            get {
                return this.OwnerDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerDisplayNameField, value) != true)) {
                    this.OwnerDisplayNameField = value;
                    this.RaisePropertyChanged("OwnerDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerHtkDescription {
            get {
                return this.OwnerHtkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerHtkDescriptionField, value) != true)) {
                    this.OwnerHtkDescriptionField = value;
                    this.RaisePropertyChanged("OwnerHtkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerReshId {
            get {
                return this.OwnerReshIdField;
            }
            set {
                if ((this.OwnerReshIdField.Equals(value) != true)) {
                    this.OwnerReshIdField = value;
                    this.RaisePropertyChanged("OwnerReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ServiceTypedValue[] ServiceTypedValues {
            get {
                return this.ServiceTypedValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypedValuesField, value) != true)) {
                    this.ServiceTypedValuesField = value;
                    this.RaisePropertyChanged("ServiceTypedValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ServiceVariant[] ServiceVariants {
            get {
                return this.ServiceVariantsField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceVariantsField, value) != true)) {
                    this.ServiceVariantsField = value;
                    this.RaisePropertyChanged("ServiceVariants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Treatment Treatment {
            get {
                return this.TreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentField, value) != true)) {
                    this.TreatmentField = value;
                    this.RaisePropertyChanged("Treatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePeriod", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial struct TimePeriod : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ToField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Treatment", Namespace="http://schemas.nhn.no/reg/HTKv1/en")]
    [System.SerializableAttribute()]
    public partial class Treatment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode[] AvailableInDomainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.TreatmentLevelWithDisplayName[] AvailableTreatmentLevelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode DrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode Icd10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode Icpc2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode MeshField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode NcspNcmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode[] AvailableInDomains {
            get {
                return this.AvailableInDomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableInDomainsField, value) != true)) {
                    this.AvailableInDomainsField = value;
                    this.RaisePropertyChanged("AvailableInDomains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.TreatmentLevelWithDisplayName[] AvailableTreatmentLevels {
            get {
                return this.AvailableTreatmentLevelsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableTreatmentLevelsField, value) != true)) {
                    this.AvailableTreatmentLevelsField = value;
                    this.RaisePropertyChanged("AvailableTreatmentLevels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Drg {
            get {
                return this.DrgField;
            }
            set {
                if ((object.ReferenceEquals(this.DrgField, value) != true)) {
                    this.DrgField = value;
                    this.RaisePropertyChanged("Drg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Icd10 {
            get {
                return this.Icd10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icd10Field, value) != true)) {
                    this.Icd10Field = value;
                    this.RaisePropertyChanged("Icd10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Icpc2 {
            get {
                return this.Icpc2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icpc2Field, value) != true)) {
                    this.Icpc2Field = value;
                    this.RaisePropertyChanged("Icpc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Mesh {
            get {
                return this.MeshField;
            }
            set {
                if ((object.ReferenceEquals(this.MeshField, value) != true)) {
                    this.MeshField = value;
                    this.RaisePropertyChanged("Mesh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode NcspNcmp {
            get {
                return this.NcspNcmpField;
            }
            set {
                if ((object.ReferenceEquals(this.NcspNcmpField, value) != true)) {
                    this.NcspNcmpField = value;
                    this.RaisePropertyChanged("NcspNcmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class Contract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode ContractTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractWithField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractWithNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasConsiderationCompetenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractTypeField, value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractWith {
            get {
                return this.ContractWithField;
            }
            set {
                if ((this.ContractWithField.Equals(value) != true)) {
                    this.ContractWithField = value;
                    this.RaisePropertyChanged("ContractWith");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractWithName {
            get {
                return this.ContractWithNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractWithNameField, value) != true)) {
                    this.ContractWithNameField = value;
                    this.RaisePropertyChanged("ContractWithName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasConsiderationCompetence {
            get {
                return this.HasConsiderationCompetenceField;
            }
            set {
                if ((this.HasConsiderationCompetenceField.Equals(value) != true)) {
                    this.HasConsiderationCompetenceField = value;
                    this.RaisePropertyChanged("HasConsiderationCompetence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceTypedValue", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class ServiceTypedValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceVariant", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class ServiceVariant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode[] OfferedTreatmentLevelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ServiceVariantTypedValue[] ServiceVariantTypedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode[] OfferedTreatmentLevels {
            get {
                return this.OfferedTreatmentLevelsField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferedTreatmentLevelsField, value) != true)) {
                    this.OfferedTreatmentLevelsField = value;
                    this.RaisePropertyChanged("OfferedTreatmentLevels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ServiceVariantTypedValue[] ServiceVariantTypedValue {
            get {
                return this.ServiceVariantTypedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceVariantTypedValueField, value) != true)) {
                    this.ServiceVariantTypedValueField = value;
                    this.RaisePropertyChanged("ServiceVariantTypedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeCode", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class CompositeCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] CodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositeCodeGroupLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositeCodeGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompositeCodeGroupOIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CompositeCodeGroupVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode[] ReplacedCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode[] ReplacingCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedDate {
            get {
                return this.ChangedDateField;
            }
            set {
                if ((this.ChangedDateField.Equals(value) != true)) {
                    this.ChangedDateField = value;
                    this.RaisePropertyChanged("ChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Codes {
            get {
                return this.CodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CodesField, value) != true)) {
                    this.CodesField = value;
                    this.RaisePropertyChanged("Codes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositeCodeGroupLanguage {
            get {
                return this.CompositeCodeGroupLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositeCodeGroupLanguageField, value) != true)) {
                    this.CompositeCodeGroupLanguageField = value;
                    this.RaisePropertyChanged("CompositeCodeGroupLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositeCodeGroupName {
            get {
                return this.CompositeCodeGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositeCodeGroupNameField, value) != true)) {
                    this.CompositeCodeGroupNameField = value;
                    this.RaisePropertyChanged("CompositeCodeGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompositeCodeGroupOID {
            get {
                return this.CompositeCodeGroupOIDField;
            }
            set {
                if ((this.CompositeCodeGroupOIDField.Equals(value) != true)) {
                    this.CompositeCodeGroupOIDField = value;
                    this.RaisePropertyChanged("CompositeCodeGroupOID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CompositeCodeGroupVersion {
            get {
                return this.CompositeCodeGroupVersionField;
            }
            set {
                if ((this.CompositeCodeGroupVersionField.Equals(value) != true)) {
                    this.CompositeCodeGroupVersionField = value;
                    this.RaisePropertyChanged("CompositeCodeGroupVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode[] ReplacedCodes {
            get {
                return this.ReplacedCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacedCodesField, value) != true)) {
                    this.ReplacedCodesField = value;
                    this.RaisePropertyChanged("ReplacedCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode[] ReplacingCodes {
            get {
                return this.ReplacingCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacingCodesField, value) != true)) {
                    this.ReplacingCodesField = value;
                    this.RaisePropertyChanged("ReplacingCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceVariantTypedValue", Namespace="http://register.nhn.no/Corporate")]
    [System.SerializableAttribute()]
    public partial class ServiceVariantTypedValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode TreatmentLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode TreatmentLevel {
            get {
                return this.TreatmentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentLevelField, value) != true)) {
                    this.TreatmentLevelField = value;
                    this.RaisePropertyChanged("TreatmentLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentLevelWithDisplayName", Namespace="http://schemas.nhn.no/reg/HTKv1/en")]
    [System.SerializableAttribute()]
    public partial class TreatmentLevelWithDisplayName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.CompositeCode TreatmentLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.CompositeCode TreatmentLevel {
            get {
                return this.TreatmentLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentLevelField, value) != true)) {
                    this.TreatmentLevelField = value;
                    this.RaisePropertyChanged("TreatmentLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCreate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ServiceCreate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerReshId {
            get {
                return this.OwnerReshIdField;
            }
            set {
                if ((this.OwnerReshIdField.Equals(value) != true)) {
                    this.OwnerReshIdField = value;
                    this.RaisePropertyChanged("OwnerReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceUpdate", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ServiceUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Code CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Code Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerReshId {
            get {
                return this.OwnerReshIdField;
            }
            set {
                if ((this.OwnerReshIdField.Equals(value) != true)) {
                    this.OwnerReshIdField = value;
                    this.RaisePropertyChanged("OwnerReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityLogEntry", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class EntityLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.EntityLogEntryData[] ChangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ByUser {
            get {
                return this.ByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ByUserField, value) != true)) {
                    this.ByUserField = value;
                    this.RaisePropertyChanged("ByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.EntityLogEntryData[] Changes {
            get {
                return this.ChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesField, value) != true)) {
                    this.ChangesField = value;
                    this.RaisePropertyChanged("Changes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityLogEntryData", Namespace="http://register.nhn.no/Common")]
    [System.SerializableAttribute()]
    public partial class EntityLogEntryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldValue {
            get {
                return this.OldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.OldValueField, value) != true)) {
                    this.OldValueField = value;
                    this.RaisePropertyChanged("OldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParentHistoryData", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ParentHistoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshUnit ForReshUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ParentWithLinkPeriod[] ParentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshUnit ForReshUnit {
            get {
                return this.ForReshUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.ForReshUnitField, value) != true)) {
                    this.ForReshUnitField = value;
                    this.RaisePropertyChanged("ForReshUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ParentWithLinkPeriod[] Parents {
            get {
                return this.ParentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentsField, value) != true)) {
                    this.ParentsField = value;
                    this.RaisePropertyChanged("Parents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParentWithLinkPeriod", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ParentWithLinkPeriod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshUnit ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshUnit Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidField, value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReshMappingNode", Namespace="http://schemas.datacontract.org/2004/07/NHN.Palantir.WebServices.Contracts.RESH.D" +
        "ata")]
    [System.SerializableAttribute()]
    public partial class ReshMappingNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.ReshMappingNode[] ChildNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConnectedToReshidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappingNodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentMappingNodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.ReshMappingNode[] ChildNodes {
            get {
                return this.ChildNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildNodesField, value) != true)) {
                    this.ChildNodesField = value;
                    this.RaisePropertyChanged("ChildNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConnectedToReshid {
            get {
                return this.ConnectedToReshidField;
            }
            set {
                if ((this.ConnectedToReshidField.Equals(value) != true)) {
                    this.ConnectedToReshidField = value;
                    this.RaisePropertyChanged("ConnectedToReshid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappingNodeId {
            get {
                return this.MappingNodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappingNodeIdField, value) != true)) {
                    this.MappingNodeIdField = value;
                    this.RaisePropertyChanged("MappingNodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentMappingNodeId {
            get {
                return this.ParentMappingNodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentMappingNodeIdField, value) != true)) {
                    this.ParentMappingNodeIdField = value;
                    this.RaisePropertyChanged("ParentMappingNodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemId {
            get {
                return this.SystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemIdField, value) != true)) {
                    this.SystemIdField = value;
                    this.RaisePropertyChanged("SystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParentLink", Namespace="http://register.nhn.no/RESH")]
    [System.SerializableAttribute()]
    public partial class ParentLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentReshIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReshTest.ServiceReference1.Period PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReshIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentReshId {
            get {
                return this.ParentReshIdField;
            }
            set {
                if ((this.ParentReshIdField.Equals(value) != true)) {
                    this.ParentReshIdField = value;
                    this.RaisePropertyChanged("ParentReshId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReshTest.ServiceReference1.Period Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReshId {
            get {
                return this.ReshIdField;
            }
            set {
                if ((this.ReshIdField.Equals(value) != true)) {
                    this.ReshIdField = value;
                    this.RaisePropertyChanged("ReshId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://register.nhn.no/Resh", ConfigurationName="ServiceReference1.IReshService")]
    public interface IReshService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/CreateDepartmentGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/CreateDepartmentValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.Department CreateDepartment(ReshTest.ServiceReference1.DepartmentCreate departmentCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateDepartmentResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.Department> CreateDepartmentAsync(ReshTest.ServiceReference1.DepartmentCreate departmentCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/UpdateDepartmentGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/UpdateDepartmentValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateDepartment(ReshTest.ServiceReference1.DepartmentUpdate departmentUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task UpdateDepartmentAsync(ReshTest.ServiceReference1.DepartmentUpdate departmentUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/MoveDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/MoveDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/MoveDepartmentGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/MoveDepartmentValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void MoveDepartment(int reshId, int moveTargetReshId, System.DateTime moveTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/MoveDepartment", ReplyAction="http://register.nhn.no/Resh/IReshService/MoveDepartmentResponse")]
        System.Threading.Tasks.Task MoveDepartmentAsync(int reshId, int moveTargetReshId, System.DateTime moveTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateOrganization", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/CreateOrganizationGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/CreateOrganizationValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.Organization CreateOrganization(ReshTest.ServiceReference1.OrganizationCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateOrganization", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateOrganizationResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.Organization> CreateOrganizationAsync(ReshTest.ServiceReference1.OrganizationCreate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateOrganization", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateOrganizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/UpdateOrganizationGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/UpdateOrganizationValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateOrganization(ReshTest.ServiceReference1.OrganizationUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateOrganization", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateOrganizationResponse")]
        System.Threading.Tasks.Task UpdateOrganizationAsync(ReshTest.ServiceReference1.OrganizationUpdate org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/AdvancedSearch", ReplyAction="http://register.nhn.no/Resh/IReshService/AdvancedSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/AdvancedSearchGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.SearchResult AdvancedSearch(ReshTest.ServiceReference1.ReshSearchParameters searchParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/AdvancedSearch", ReplyAction="http://register.nhn.no/Resh/IReshService/AdvancedSearchResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.SearchResult> AdvancedSearchAsync(ReshTest.ServiceReference1.ReshSearchParameters searchParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/Search", ReplyAction="http://register.nhn.no/Resh/IReshService/SearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/SearchGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.SearchResult Search(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/Search", ReplyAction="http://register.nhn.no/Resh/IReshService/SearchResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.SearchResult> SearchAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetReshUnit", ReplyAction="http://register.nhn.no/Resh/IReshService/GetReshUnitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetReshUnitGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/GetReshUnitValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshUnit GetReshUnit(int reshId, bool excludeDetails, bool includeChildUnits, System.Nullable<System.DateTime> treeAtTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetReshUnit", ReplyAction="http://register.nhn.no/Resh/IReshService/GetReshUnitResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshUnit> GetReshUnitAsync(int reshId, bool excludeDetails, bool includeChildUnits, System.Nullable<System.DateTime> treeAtTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildren", ReplyAction="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildrenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildrenGenericFa" +
            "ultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildrenValidatio" +
            "nFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshUnit GetReshUnitWithInactiveChildren(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildren", ReplyAction="http://register.nhn.no/Resh/IReshService/GetReshUnitWithInactiveChildrenResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshUnit> GetReshUnitWithInactiveChildrenAsync(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTree", ReplyAction="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTreeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTreeGenericFaultFaul" +
            "t", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTreeValidationFaultF" +
            "ault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.BusinessWithConnectedReshUnits[] GetTreatmentFacilityTree(int reshid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTree", ReplyAction="http://register.nhn.no/Resh/IReshService/GetTreatmentFacilityTreeResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.BusinessWithConnectedReshUnits[]> GetTreatmentFacilityTreeAsync(int reshid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateService", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/CreateServiceGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/CreateServiceValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.Service CreateService(ReshTest.ServiceReference1.ServiceCreate service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateService", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateServiceResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.Service> CreateServiceAsync(ReshTest.ServiceReference1.ServiceCreate service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateService", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/UpdateServiceGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/UpdateServiceValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void UpdateService(ReshTest.ServiceReference1.ServiceUpdate service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateService", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateServiceResponse")]
        System.Threading.Tasks.Task UpdateServiceAsync(ReshTest.ServiceReference1.ServiceUpdate service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacility", ReplyAction="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacilityRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacilityGeneri" +
            "cFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacilityValida" +
            "tionFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void ConnectReshUnitToTreatmentFacility(int reshId, int treatmentFacilityOrganizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacility", ReplyAction="http://register.nhn.no/Resh/IReshService/ConnectReshUnitToTreatmentFacilityRespon" +
            "se")]
        System.Threading.Tasks.Task ConnectReshUnitToTreatmentFacilityAsync(int reshId, int treatmentFacilityOrganizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacility", ReplyAction="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacilityR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacilityG" +
            "enericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacilityV" +
            "alidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void DisconnectReshUnitFromTreatmentFacility(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacility", ReplyAction="http://register.nhn.no/Resh/IReshService/DisconnectReshUnitFromTreatmentFacilityR" +
            "esponse")]
        System.Threading.Tasks.Task DisconnectReshUnitFromTreatmentFacilityAsync(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumber", ReplyAction="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumberRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumberGener" +
            "icFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumberValid" +
            "ationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.Organization GetOrganizationByOrganizationNumber(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumber", ReplyAction="http://register.nhn.no/Resh/IReshService/GetOrganizationByOrganizationNumberRespo" +
            "nse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.Organization> GetOrganizationByOrganizationNumberAsync(int organizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/AddCustomAttribute", ReplyAction="http://register.nhn.no/Resh/IReshService/AddCustomAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/AddCustomAttributeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/AddCustomAttributeValidationFaultFault", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.Code AddCustomAttribute(int reshId, ReshTest.ServiceReference1.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/AddCustomAttribute", ReplyAction="http://register.nhn.no/Resh/IReshService/AddCustomAttributeResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.Code> AddCustomAttributeAsync(int reshId, ReshTest.ServiceReference1.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/RemoveCustomAttribute", ReplyAction="http://register.nhn.no/Resh/IReshService/RemoveCustomAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/RemoveCustomAttributeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.ValidationFault), Action="http://register.nhn.no/Resh/IReshService/RemoveCustomAttributeValidationFaultFaul" +
            "t", Name="ValidationFault", Namespace="http://register.nhn.no/Common")]
        void RemoveCustomAttribute(int reshId, ReshTest.ServiceReference1.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/RemoveCustomAttribute", ReplyAction="http://register.nhn.no/Resh/IReshService/RemoveCustomAttributeResponse")]
        System.Threading.Tasks.Task RemoveCustomAttributeAsync(int reshId, ReshTest.ServiceReference1.Code code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetChangeLog", ReplyAction="http://register.nhn.no/Resh/IReshService/GetChangeLogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetChangeLogGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.EntityLogEntry[] GetChangeLog(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetChangeLog", ReplyAction="http://register.nhn.no/Resh/IReshService/GetChangeLogResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.EntityLogEntry[]> GetChangeLogAsync(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetParentHistoryForReshUnit", ReplyAction="http://register.nhn.no/Resh/IReshService/GetParentHistoryForReshUnitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetParentHistoryForReshUnitGenericFaultF" +
            "ault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ParentHistoryData GetParentHistoryForReshUnit(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetParentHistoryForReshUnit", ReplyAction="http://register.nhn.no/Resh/IReshService/GetParentHistoryForReshUnitResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ParentHistoryData> GetParentHistoryForReshUnitAsync(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetAllMappingNodes", ReplyAction="http://register.nhn.no/Resh/IReshService/GetAllMappingNodesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetAllMappingNodesGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode[] GetAllMappingNodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetAllMappingNodes", ReplyAction="http://register.nhn.no/Resh/IReshService/GetAllMappingNodesResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode[]> GetAllMappingNodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetMappingNodeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode GetMappingNode(string systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodeResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> GetMappingNodeAsync(string systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNodesUnderReshId", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodesUnderReshIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetMappingNodesUnderReshIdGenericFaultFa" +
            "ult", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode[] GetMappingNodesUnderReshId(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNodesUnderReshId", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodesUnderReshIdResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode[]> GetMappingNodesUnderReshIdAsync(int reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateMappingNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/CreateMappingNodeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode CreateMappingNode(string systemId, string name, string mappingNodeId, string parentMappingNodeId, System.Nullable<int> reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/CreateMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/CreateMappingNodeResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> CreateMappingNodeAsync(string systemId, string name, string mappingNodeId, string parentMappingNodeId, System.Nullable<int> reshId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateMappingNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/UpdateMappingNodeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode UpdateMappingNode(ReshTest.ServiceReference1.ReshMappingNode updatedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/UpdateMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/UpdateMappingNodeResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> UpdateMappingNodeAsync(ReshTest.ServiceReference1.ReshMappingNode updatedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/DeleteMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/DeleteMappingNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/DeleteMappingNodeGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        void DeleteMappingNode(string systemId, string mappingNodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/DeleteMappingNode", ReplyAction="http://register.nhn.no/Resh/IReshService/DeleteMappingNodeResponse")]
        System.Threading.Tasks.Task DeleteMappingNodeAsync(string systemId, string mappingNodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNodeDetail", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodeDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetMappingNodeDetailGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ReshMappingNode GetMappingNodeDetail(string systemId, string mappingNodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetMappingNodeDetail", ReplyAction="http://register.nhn.no/Resh/IReshService/GetMappingNodeDetailResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> GetMappingNodeDetailAsync(string systemId, string mappingNodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetModifiedReshIds", ReplyAction="http://register.nhn.no/Resh/IReshService/GetModifiedReshIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetModifiedReshIdsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        int[] GetModifiedReshIds(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetModifiedReshIds", ReplyAction="http://register.nhn.no/Resh/IReshService/GetModifiedReshIdsResponse")]
        System.Threading.Tasks.Task<int[]> GetModifiedReshIdsAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetModifiedParentLinks", ReplyAction="http://register.nhn.no/Resh/IReshService/GetModifiedParentLinksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ReshTest.ServiceReference1.GenericFault), Action="http://register.nhn.no/Resh/IReshService/GetModifiedParentLinksGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        ReshTest.ServiceReference1.ParentLink[] GetModifiedParentLinks(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/Resh/IReshService/GetModifiedParentLinks", ReplyAction="http://register.nhn.no/Resh/IReshService/GetModifiedParentLinksResponse")]
        System.Threading.Tasks.Task<ReshTest.ServiceReference1.ParentLink[]> GetModifiedParentLinksAsync(System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReshServiceChannel : ReshTest.ServiceReference1.IReshService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReshServiceClient : System.ServiceModel.ClientBase<ReshTest.ServiceReference1.IReshService>, ReshTest.ServiceReference1.IReshService {
        
        public ReshServiceClient() {
        }
        
        public ReshServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReshServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReshServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReshServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReshTest.ServiceReference1.Department CreateDepartment(ReshTest.ServiceReference1.DepartmentCreate departmentCreate) {
            return base.Channel.CreateDepartment(departmentCreate);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.Department> CreateDepartmentAsync(ReshTest.ServiceReference1.DepartmentCreate departmentCreate) {
            return base.Channel.CreateDepartmentAsync(departmentCreate);
        }
        
        public void UpdateDepartment(ReshTest.ServiceReference1.DepartmentUpdate departmentUpdate) {
            base.Channel.UpdateDepartment(departmentUpdate);
        }
        
        public System.Threading.Tasks.Task UpdateDepartmentAsync(ReshTest.ServiceReference1.DepartmentUpdate departmentUpdate) {
            return base.Channel.UpdateDepartmentAsync(departmentUpdate);
        }
        
        public void MoveDepartment(int reshId, int moveTargetReshId, System.DateTime moveTime) {
            base.Channel.MoveDepartment(reshId, moveTargetReshId, moveTime);
        }
        
        public System.Threading.Tasks.Task MoveDepartmentAsync(int reshId, int moveTargetReshId, System.DateTime moveTime) {
            return base.Channel.MoveDepartmentAsync(reshId, moveTargetReshId, moveTime);
        }
        
        public ReshTest.ServiceReference1.Organization CreateOrganization(ReshTest.ServiceReference1.OrganizationCreate org) {
            return base.Channel.CreateOrganization(org);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.Organization> CreateOrganizationAsync(ReshTest.ServiceReference1.OrganizationCreate org) {
            return base.Channel.CreateOrganizationAsync(org);
        }
        
        public void UpdateOrganization(ReshTest.ServiceReference1.OrganizationUpdate org) {
            base.Channel.UpdateOrganization(org);
        }
        
        public System.Threading.Tasks.Task UpdateOrganizationAsync(ReshTest.ServiceReference1.OrganizationUpdate org) {
            return base.Channel.UpdateOrganizationAsync(org);
        }
        
        public ReshTest.ServiceReference1.SearchResult AdvancedSearch(ReshTest.ServiceReference1.ReshSearchParameters searchParameters) {
            return base.Channel.AdvancedSearch(searchParameters);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.SearchResult> AdvancedSearchAsync(ReshTest.ServiceReference1.ReshSearchParameters searchParameters) {
            return base.Channel.AdvancedSearchAsync(searchParameters);
        }
        
        public ReshTest.ServiceReference1.SearchResult Search(string term) {
            return base.Channel.Search(term);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.SearchResult> SearchAsync(string term) {
            return base.Channel.SearchAsync(term);
        }
        
        public ReshTest.ServiceReference1.ReshUnit GetReshUnit(int reshId, bool excludeDetails, bool includeChildUnits, System.Nullable<System.DateTime> treeAtTime) {
            return base.Channel.GetReshUnit(reshId, excludeDetails, includeChildUnits, treeAtTime);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshUnit> GetReshUnitAsync(int reshId, bool excludeDetails, bool includeChildUnits, System.Nullable<System.DateTime> treeAtTime) {
            return base.Channel.GetReshUnitAsync(reshId, excludeDetails, includeChildUnits, treeAtTime);
        }
        
        public ReshTest.ServiceReference1.ReshUnit GetReshUnitWithInactiveChildren(int reshId) {
            return base.Channel.GetReshUnitWithInactiveChildren(reshId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshUnit> GetReshUnitWithInactiveChildrenAsync(int reshId) {
            return base.Channel.GetReshUnitWithInactiveChildrenAsync(reshId);
        }
        
        public ReshTest.ServiceReference1.BusinessWithConnectedReshUnits[] GetTreatmentFacilityTree(int reshid) {
            return base.Channel.GetTreatmentFacilityTree(reshid);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.BusinessWithConnectedReshUnits[]> GetTreatmentFacilityTreeAsync(int reshid) {
            return base.Channel.GetTreatmentFacilityTreeAsync(reshid);
        }
        
        public ReshTest.ServiceReference1.Service CreateService(ReshTest.ServiceReference1.ServiceCreate service) {
            return base.Channel.CreateService(service);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.Service> CreateServiceAsync(ReshTest.ServiceReference1.ServiceCreate service) {
            return base.Channel.CreateServiceAsync(service);
        }
        
        public void UpdateService(ReshTest.ServiceReference1.ServiceUpdate service) {
            base.Channel.UpdateService(service);
        }
        
        public System.Threading.Tasks.Task UpdateServiceAsync(ReshTest.ServiceReference1.ServiceUpdate service) {
            return base.Channel.UpdateServiceAsync(service);
        }
        
        public void ConnectReshUnitToTreatmentFacility(int reshId, int treatmentFacilityOrganizationNumber) {
            base.Channel.ConnectReshUnitToTreatmentFacility(reshId, treatmentFacilityOrganizationNumber);
        }
        
        public System.Threading.Tasks.Task ConnectReshUnitToTreatmentFacilityAsync(int reshId, int treatmentFacilityOrganizationNumber) {
            return base.Channel.ConnectReshUnitToTreatmentFacilityAsync(reshId, treatmentFacilityOrganizationNumber);
        }
        
        public void DisconnectReshUnitFromTreatmentFacility(int reshId) {
            base.Channel.DisconnectReshUnitFromTreatmentFacility(reshId);
        }
        
        public System.Threading.Tasks.Task DisconnectReshUnitFromTreatmentFacilityAsync(int reshId) {
            return base.Channel.DisconnectReshUnitFromTreatmentFacilityAsync(reshId);
        }
        
        public ReshTest.ServiceReference1.Organization GetOrganizationByOrganizationNumber(int organizationNumber) {
            return base.Channel.GetOrganizationByOrganizationNumber(organizationNumber);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.Organization> GetOrganizationByOrganizationNumberAsync(int organizationNumber) {
            return base.Channel.GetOrganizationByOrganizationNumberAsync(organizationNumber);
        }
        
        public ReshTest.ServiceReference1.Code AddCustomAttribute(int reshId, ReshTest.ServiceReference1.Code code) {
            return base.Channel.AddCustomAttribute(reshId, code);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.Code> AddCustomAttributeAsync(int reshId, ReshTest.ServiceReference1.Code code) {
            return base.Channel.AddCustomAttributeAsync(reshId, code);
        }
        
        public void RemoveCustomAttribute(int reshId, ReshTest.ServiceReference1.Code code) {
            base.Channel.RemoveCustomAttribute(reshId, code);
        }
        
        public System.Threading.Tasks.Task RemoveCustomAttributeAsync(int reshId, ReshTest.ServiceReference1.Code code) {
            return base.Channel.RemoveCustomAttributeAsync(reshId, code);
        }
        
        public ReshTest.ServiceReference1.EntityLogEntry[] GetChangeLog(int reshId) {
            return base.Channel.GetChangeLog(reshId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.EntityLogEntry[]> GetChangeLogAsync(int reshId) {
            return base.Channel.GetChangeLogAsync(reshId);
        }
        
        public ReshTest.ServiceReference1.ParentHistoryData GetParentHistoryForReshUnit(int reshId) {
            return base.Channel.GetParentHistoryForReshUnit(reshId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ParentHistoryData> GetParentHistoryForReshUnitAsync(int reshId) {
            return base.Channel.GetParentHistoryForReshUnitAsync(reshId);
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode[] GetAllMappingNodes() {
            return base.Channel.GetAllMappingNodes();
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode[]> GetAllMappingNodesAsync() {
            return base.Channel.GetAllMappingNodesAsync();
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode GetMappingNode(string systemId) {
            return base.Channel.GetMappingNode(systemId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> GetMappingNodeAsync(string systemId) {
            return base.Channel.GetMappingNodeAsync(systemId);
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode[] GetMappingNodesUnderReshId(int reshId) {
            return base.Channel.GetMappingNodesUnderReshId(reshId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode[]> GetMappingNodesUnderReshIdAsync(int reshId) {
            return base.Channel.GetMappingNodesUnderReshIdAsync(reshId);
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode CreateMappingNode(string systemId, string name, string mappingNodeId, string parentMappingNodeId, System.Nullable<int> reshId) {
            return base.Channel.CreateMappingNode(systemId, name, mappingNodeId, parentMappingNodeId, reshId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> CreateMappingNodeAsync(string systemId, string name, string mappingNodeId, string parentMappingNodeId, System.Nullable<int> reshId) {
            return base.Channel.CreateMappingNodeAsync(systemId, name, mappingNodeId, parentMappingNodeId, reshId);
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode UpdateMappingNode(ReshTest.ServiceReference1.ReshMappingNode updatedData) {
            return base.Channel.UpdateMappingNode(updatedData);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> UpdateMappingNodeAsync(ReshTest.ServiceReference1.ReshMappingNode updatedData) {
            return base.Channel.UpdateMappingNodeAsync(updatedData);
        }
        
        public void DeleteMappingNode(string systemId, string mappingNodeId) {
            base.Channel.DeleteMappingNode(systemId, mappingNodeId);
        }
        
        public System.Threading.Tasks.Task DeleteMappingNodeAsync(string systemId, string mappingNodeId) {
            return base.Channel.DeleteMappingNodeAsync(systemId, mappingNodeId);
        }
        
        public ReshTest.ServiceReference1.ReshMappingNode GetMappingNodeDetail(string systemId, string mappingNodeId) {
            return base.Channel.GetMappingNodeDetail(systemId, mappingNodeId);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ReshMappingNode> GetMappingNodeDetailAsync(string systemId, string mappingNodeId) {
            return base.Channel.GetMappingNodeDetailAsync(systemId, mappingNodeId);
        }
        
        public int[] GetModifiedReshIds(System.DateTime date) {
            return base.Channel.GetModifiedReshIds(date);
        }
        
        public System.Threading.Tasks.Task<int[]> GetModifiedReshIdsAsync(System.DateTime date) {
            return base.Channel.GetModifiedReshIdsAsync(date);
        }
        
        public ReshTest.ServiceReference1.ParentLink[] GetModifiedParentLinks(System.DateTime date) {
            return base.Channel.GetModifiedParentLinks(date);
        }
        
        public System.Threading.Tasks.Task<ReshTest.ServiceReference1.ParentLink[]> GetModifiedParentLinksAsync(System.DateTime date) {
            return base.Channel.GetModifiedParentLinksAsync(date);
        }
    }
}
